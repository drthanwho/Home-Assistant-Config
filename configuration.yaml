homeassistant:
  # auth_providers:
  #   - type: homeassistant
  #   - type: trusted_networks
  #     trusted_networks:
  #       - 192.168.1.0/24
  #       - 172.27.66.3
  packages: !include_dir_named packages
  allowlist_external_dirs:
    - /tmp
  media_dirs:
    media: /media
    tmp: /tmp
  # Name of the location where Home Assistant is running
  # name: Home
  # Location required to calculate the time the sun rises and sets
  # latitude: !secret lattitude
  # longitude: !secret longitude
  # Impacts weather/sunrise data (altitude above sea level in meters)
  # elevation: 350
  # metric for Metric, imperial for Imperial
  # unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  # time_zone: Europe/Athens
  # Customization file
  customize: !include customize.yaml
# Show links to resources in log and frontend
python_script:
# Enables the frontend
frontend:
  themes: !include_dir_merge_named themes
  extra_module_url:
    - /hacsfiles/lovelace-card-mod/card-mod.js
  
default_config:

#Move to NGINX setup
http:
  use_x_forwarded_for: true
  trusted_proxies:
    - 172.30.33.0/24
    # - 127.0.0.1
  # ssl_certificate: /ssl/fullchain.pem
  # ssl_key: /ssl/privkey.pem
#  base_url: !secret base_url
#  ip_ban_enabled: true
#  login_attempts_threshold: 8

browser_mod:
  prefix: "browser_"
  devices:
    6ae19178-f0cc70ed:
      name: thanasis_laptop
    052fd593-5ed48fb3:
      name: huawei_phone

influxdb:
  username: homeassistant
  password: !secret influxdb_password
  database: homeassistant
  max_retries: 3
  default_measurement: state

stream:
# ffmpeg:
#   ffmpeg_bin: /usr/bin/ffmpeg
  # hwaccel_args:
  #   - -c:v
  #   - h264_v4l2m2m
lovelace_gen:
lovelace:
  mode: storage
  dashboards:
    lovelace-yaml:
      mode: yaml
      title: Irrigation
      icon: mdi:flower
      show_in_sidebar: true
      # filename: lovelace/view_garden_irrigation.yaml
      filename: irrigation.yaml

#Telegram Bot
telegram_bot:
  - platform: polling
    api_key: !secret telegram_api_key
    allowed_chat_ids:
      - !secret telegram_thanasis_id
      - !secret telegram_makis_id
      - !secret telegram_pavlina_id

twilio:
  account_sid: !secret twilio_sid
  auth_token: !secret twilio_token

spotify:
  client_id: !secret spotify_client_id
  client_secret: !secret spotify_client_secret

#Partially working custom integration for EVA II Dehumidifier ~ major logging
midea_dehumidifier:
  username: !secret midea_dehumi_username
  password: !secret midea_dehumi_pwd

input_text:
  alexa_actionable_notification:
    name: Alexa Actionable Notification Holder
    max: 255
    initial: '{"text": "This is a test of the alexa actions custom skill. Did it work?", "event": "actionable.skill.test"}'

api:

alexa: !include amazon_alexa.yaml

rest_command: !include rest_command.yaml

rest: !include rest_sensors.yaml

# mqtt:
#   broker: m20.cloudmqtt.com
#   port: 18261
#   username: !secret cloudmqtt_username
#   password: !secret cloudmqtt_password
analytics:
# Allows you to issue voice commands from the frontend in enabled browsers
conversation:
# Enables support for tracking state changes over time
logger:
  default: warn
  # default: info
  logs:
    # homeassistant.loader: error
    # custom_components.healthchecksio: debug
    # homeassistant.loader: error
    custom_components.midea_dehumidifier.humidifier: critical
    custom_components.midea_dehumidifier: critical
    custom_components.humidifier.midea_dehumidifier: critical
    homeassistant.components.generic.camera: critical
    # homeassistant.components.camera: debug
    # homeassistant.components.esphome: error
    # homeassistant.components.nest: critical
    # homeassistant.components.nest.camera_sdm: critical
    # google_nest_sdm: critical
    # google_nest_sdm.device: critical
    # google_nest_sdm.device_manager: critical
    # google_nest_sdm.google_nest_subscriber: critical
    # google_nest_sdm.event: critical
    # google.cloud.pubsub_v1: critical
    # google.cloud.pubsub_v1.subscriber._protocol.streaming_pull_manager: critical
    homeassistant.components.stream.worker: critical
    homeassistant.components.stream: critical
    # libav.rtsp: critical 
    # libav.tls: critical
    # homeassistant.components.webhook: error
    # homeassistant.components.generic.camera: critical
    # custom_components.remote_homeassistant: critical
    homeassistant.components.camera: critical
    # aioesphomeapi.reconnect_logic: critical
    # homeassistant.components.tts: debug
    # pycsspeechtts.pycsspeechtts: debug
    # homeassistant.components.deconz: debug
## for v 1.0.0
    # custom_components.alexa_media: debug  
## for API debugging (verbose and intended for service debugging)
    # alexapy: debug
    # custom_components.midea_dehumi: fatal
    # custom_components.climate.midea_dehumi: fatal
    # custom_components.sensor.midea_dehumi: fatal
    # custom_components.midea_dehumi.climate: fatal
    # homeassistant.components.sensor: fatal
    # homeassistant.components.http.ban: debug
  filters:
    # homeassistant.components.websocket_api.http.connection:
    #   - "^Error handling message: Unknown error.*"
    root:
      - "^MideaClient::send_api_request:.*"
      - "^MideaClient:.*"
    homeassistant.helpers.entity:
      - "^Update for humidifier.midea_dehumidifier_18691697727728 fails.*"
    homeassistant.helpers.frame:
      - "^Detected integration that accessed*"

#DarkSky
weather:
  - platform: darksky
    api_key: !secret darksky_api_key
  # language: el
    mode: daily
# Text to speech
tts:
  - platform: google_translate
    service_name: google_say
  - platform: microsoft
    api_key: !secret azure_speach_api_key
    language: el-gr
    gender: Female
    type: AthinaNeural
    region: westeurope

# modbus:
#   - type: tcp
#     name: siemens
#     host: 192.168.1.243
#     port: 502
#     sensors: !include_dir_merge_list Siemens_Sentron_PAC3200/

# eufy:
#   username: !secret thanasis_email
#   password: !secret eufy_password

# irrigation_unlimited:!include irrigation_unlimited.yaml

panel_custom:
  - name: panel-redirect
    # url_path needs to be unique for each panel_custom config
    url_path: redirect-server-controls
    sidebar_title: Server Controls
    sidebar_icon: mdi:server
    module_url: /local/panel-redirect.js
    config:
      # Where you want to redirect to
      target: /config/server_control
  - name: panel-redirect
    # url_path needs to be unique for each panel_custom config
    url_path: redirect-supervisor
    sidebar_title: Supervisor
    sidebar_icon: mdi:home-assistant
    module_url: /local/panel-redirect.js
    config:
      # Where you want to redirect to
      target: /hassio/dashboard

smartir:

climate:
  - platform: smartir
    name: Hall AC
    unique_id: hall_ac
    device_code: 1111
    controller_data: bw_rc1_send_raw_command
    temperature_sensor: sensor.temperature_inside
    humidity_sensor: sensor.humidity_inside

sonoff:
 username: !secret sonoff_username
 password: !secret sonoff_password
 default_class: light

nest:
  client_id: !secret nest_client_id
  client_secret: !secret nest_client_secret
  project_id: !secret nest_project_id
  subscriber_id: !secret nest_subscriber_id

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
switch: !include switches.yaml
input_select: !include input-select.yaml
sensor: !include_dir_merge_list sensors/
binary_sensor: !include binary_sensor.yaml
recorder: !include recorder.yaml
utility_meter: !include utility_meter.yaml
scene: !include scenes.yaml
shell_command: !include shell_command.yaml
notify: !include notify.yaml
media_player: !include media_player.yaml
google_assistant: !include google_assistant.yaml
camera: !include_dir_merge_list cameras/
alarm_control_panel: !include alarm_control_panel.yaml
template: !include_dir_merge_list templates/
multiscrape: !include_dir_merge_list multiscrape/
# automations: !include automations.yaml
# automations manual: !include awesome_automations.yaml