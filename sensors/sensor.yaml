- platform: uptime
  name: "HassIO Uptime"
  scan_interval: 60
  # unit_of_measurement: days #deprecated as of 1.0!

# - platform: radarr
#   api_key: !secret radarr_api_key
#   host: 192.168.1.245
#   monitored_conditions:
#     - upcoming
#     - movies
#     - commands
#     - diskspace
#     - status
#   days: 2

- platform: command_line
  name: HassIO CPU Temperature
  command: "cat /sys/class/thermal/thermal_zone0/temp"
  unit_of_measurement: "°C"
  value_template: '{{ value | multiply(0.001) | round(1) }}'

# - platform: cups
#   host: 192.168.1.249
#   printers:
#     - CP_1025
#     - HP_LaserJet_CP_1025

# - platform: twitch
#   client_id: !secret twitch_client_id
#   token: !secret twitch_token
#   channels:
#     - drzzs
  
# - platform: command_line
#   name: Media Server CPU Temperature
#   command: "ssh -i /ssl/rpi_key -o StrictHostKeyChecking=no pi@192.168.1.249 'cat /sys/class/thermal/thermal_zone0/temp'"
#   unit_of_measurement: '°C'
#   value_template: '{{ value | multiply(0.001) | round(1) }}'

- platform: time_date
  display_options:
    - 'date'
    - 'time'
- platform: worldclock
  time_zone: Europe/Athens

- platform: sun2
  monitored_conditions:
    - sunrise
    - sunset

- platform: template
  sensors:
    pavlina_status:
      value_template: '{{ states.input_select.pavlina_status_dropdown.state }}'
      friendly_name: 'Mum'
    makis_status:
      value_template: '{{ states.input_select.makis_status_dropdown.state }}'
      friendly_name: 'Dad'
    sofia_status:
      value_template: '{{ states.input_select.sofia_status_dropdown.state }}'
      friendly_name: 'Sofia'
    thanasis_status:
      value_template: '{{ states.input_select.thanasis_status_dropdown.state }}'
      friendly_name: 'Thanasis'
    dad_status:
      value_template: '{{ states.input_select.dad_status_dropdown.state }}'
      friendly_name: 'Dad'

- platform: template
  sensors:
    last_alexa:
      value_template: >
        {{ expand(states.group.echos) | selectattr('attributes.last_called','eq',True) | map(attribute='entity_id') | first | default }}


# - platform: feedparser
#   name: ΣΚΑΪ NEWS
#   feed_url: 'http://feeds.feedburner.com/skai/Uulu'
#   date_format: '%a, %b %d %I:%M %p'
#   inclusions:
#     - title
#     - link
#     - image
# #    - published
#     - summary
# - platform: rest
#   resource: https://version.home-assistant.io/stable.json
#   name: HassOS Latest Version
#   value_template: '{{ value_json.hassos["rpi4-64"] }}'
#   scan_interval: 3600

- platform: seventeentrack
  username: !secret 17track_email
  password: !secret 17track_pass
  show_delivered: true

- platform: template
  sensors:
    dehumi_tank:
      friendly_name: 'Δεξαμενή Αφυγραντήρα'
      value_template: >-
          {% if is_state('humidifier.midea_dehumidifier_18691697727728', 'tank_show'), 'False' %}
            Empty
          {% else %}
            Full
          {% endif %}
      icon_template: >-
          {% if is_state('humidifier.midea_dehumidifier_18691697727728', 'tank_show'), 'False' %}
            mdi:tray
          {% else %}
            mdi:tray-full
          {% endif %}
    motion_saloni:
      friendly_name: 'Motion Saloni Zigbee'
      value_template: >-
          {% if is_state('binary_sensor.presence_30', 'off')%}
            OFF
          {% else %}
            ON
          {% endif %}
    rpi_uptime:
      friendly_name: RPi Uptime
      # entity_id: sensor.time
      value_template: >
        {% set up_time = as_timestamp(now()) - as_timestamp(states('sensor.last_boot')) %}

        {% set minutes = (up_time // 60) | int %}
        {% set hours = (minutes // 60) %}
        {% set days = (hours // 24) %}
        {% set weeks = (days // 7) %}

        {% set minutes = (minutes % 60) %}
        {% set hours =  (hours % 24) %}
        {% set days = (days % 7) %}

        {% macro phrase(value, name) %}
                  {%- set value = value %}
                  {%- set end = 's' if value > 1 else '' %}
                  {{- '{} {}{}'.format(value, name, end) if value | int > 0 else '' }}
        {%- endmacro %}
                  
        {% set text = [ phrase(weeks, 'week'), phrase(days, 'day'), phrase(hours, 'hr'), phrase(minutes, 'min') ] | select('!=','') | list | join(', ') %}
        {% set last_comma = text.rfind(',') %}
        {% if last_comma != -1 %}
          {% set text = text[:last_comma] + ' and' + text[last_comma + 1:] %}
        {% endif %}
        
        {{ text }}
    ha_uptime:
      friendly_name: HA Uptime
      value_template: >
        {%- set up_time = as_timestamp(now())-as_timestamp(states('sensor.hassio_uptime')) %}

        {%- macro phrase(name, divisor, mod=None) %}
          {%- set value = ((up_time // divisor) % (mod if mod else divisor)) | int %}
          {%- set end = 's' if value > 1 else '' %}
          {{- '{} {}{}'.format(value, name, end) if value | int > 0 else '' }}
        {%- endmacro %}
        
        {%- set values = [ 
                    phrase('week', 60*60*24*7), 
                    phrase('day', 60*60*24, 7), 
                    phrase('hour', 60*60, 24),
                    phrase('min', 60), 
                    phrase('sec', 1, 60) 
                ] | select('!=','') | list %}
                      
        {{ values[:-1] | join(', ') ~ ' and ' ~ values[-1] if values | length > 1 else values | first }}
    rpi_last_boot_timestamp:
      friendly_name: Last Boot
      value_template: >
        {% set date = as_timestamp(states('sensor.last_boot')) | timestamp_custom('%d') %}
        {% set date = '{:01}'.format(date | int) %}
        {% if date in ('1', '21', '31') %}
          {% set date = date ~ 'st' %}
        {% elif now().day in ('2', '22') %}
          {% set date = date ~ 'nd' %}
        {% elif now().day in ('3', '23') %}
          {% set date = date ~ 'rd' %}
        {% else %}
          {% set date = date ~ 'th' %}
        {% endif %}
  
        {{ as_timestamp(states('sensor.last_boot')) | timestamp_custom('%H:%M on %a') }} {{ date }} {{ as_timestamp(states('sensor.last_boot')) | timestamp_custom('%b %Y') }}
    # Sensor for Home Assistant difference between start and shutdown times.
    # restart_time:
    #   friendly_name: Restart Time
    #   unique_id: c252bb03-374f-41a9-9e41-d1e1e02b9d90
    #   icon_template: mdi:timer-outline
    #   unit_of_measurement: seconds
    #   device_class: timestamp
    #   value_template: "{{ (states('sensor.start_timestamp')|float - states('sensor.shutdown_timestamp')|float) | round(0) }}"
    dark_sky_temperature:
      friendly_name: Temperature Dark Sky
      unique_id: a1033504-b409-476b-84f3-516d91cf6d5c
      icon_template: mdi:thermometer
      value_template: "{{state_attr('weather.dark_sky', 'temperature')}}"

    # midea_current_humidity:
    #   friendly_name: "midea_current_humidity"
    #   value_template: "{{ state_attr('humidifier.midea_dehumidifier_12345678901234', 'current_humidity') }}"
    #   unit_of_measurement: "%"
    # midea_target_humidity:
    #   friendly_name: "midea_target_humidity"
    #   value_template: "{{ state_attr('humidifier.midea_dehumidifier_12345678901234', 'humidity') }}"
    #   unit_of_measurement: "%"
    # dehumi_target_humidity:
    #   friendly_name: "Επιθυμητό Επίπεδο Υγρασίας"
    #   value_template: "{{ states.climate.midea_dehumi_18691697727728.attributes.humidity }}"
    #   unit_of_measurement: "%"
    # dehumi_current_humidity:
    #   friendly_name: "Τωρινό Επίπεδο Υγρασίας"
    #   value_template: "{{ states.climate.midea_dehumi_18691697727728.attributes.current_humidity }}"
    #   unit_of_measurement: "%"
    # dehumi_state:
    #   friendly_name: "Λειτουργία Αφυγραντήρα"
    #   value_template: "{{ states.climate.midea_dehumi_18691697727728.state }}"

#- platform: template
#  sensors:
#    time_at_home_today:
#      friendly_name: 'Ωρες στο σπίτι'
#      value_template: '{{states.sensor.time_home.attributes.value}}'    
#    time_away_today:
#      friendly_name: 'Ώρες εκτός σπιτιού'
#      value_template: '{{states.sensor.time_away.attributes.value}}' 

- platform: integration
  source: sensor.pzem_l2_power
  name: energy_l2_test
  unit_prefix: k
  round: 2