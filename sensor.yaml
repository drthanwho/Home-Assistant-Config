- platform: uptime
  name: "HassIO Uptime"
  scan_interval: 60
  # unit_of_measurement: days #deprecated as of 1.0!

- platform: command_line
  name: HassIO CPU Temperature
  command: "cat /sys/class/thermal/thermal_zone0/temp"
  unit_of_measurement: "°C"
  value_template: '{{ value | multiply(0.001) | round(1) }}'

- platform: cups
  host: 192.168.1.249
  printers:
    - CP_1025

- platform: twitch
  client_id: !secret twitch_client_id
  token: !secret twitch_token
  channels:
    - drzzs
  
# - platform: command_line
#   name: Media Server CPU Temperature
#   command: "ssh -i /ssl/rpi_key -o StrictHostKeyChecking=no pi@192.168.1.249 'cat /sys/class/thermal/thermal_zone0/temp'"
#   unit_of_measurement: '°C'
#   value_template: '{{ value | multiply(0.001) | round(1) }}'
  
- platform: sql
  db_url: !secret mariadb_url
  queries:
    - name: Maria DB Size
      query: 'SELECT table_schema "database", Round(Sum(data_length + index_length) / 1048576, 2) "value" FROM information_schema.tables WHERE table_schema="homeassistant" GROUP BY table_schema;'
      column: 'value'
      unit_of_measurement: MB
    - name: DB size_kb
      query: 'SELECT table_schema "database", Round(Sum(data_length + index_length) / 1024, 1) "value" FROM information_schema.tables WHERE table_schema="homeassistant" GROUP BY table_schema;'
      column: 'value'
      unit_of_measurement: kB

- platform: time_date
  display_options:
    - 'date'
    - 'time'
- platform: worldclock
  time_zone: Europe/Athens
  
- platform: systemmonitor
  resources:
    - type: memory_free
    - type: memory_use_percent
    - type: processor_use
    - type: load_5m
    - type: load_15m
    - type: disk_free
      arg: /home
    - type: last_boot

- platform: template
  sensors:
    pavlina_status:
      value_template: '{{ states.input_select.pavlina_status_dropdown.state }}'
      friendly_name: 'Mum'
    makis_status:
      value_template: '{{ states.input_select.makis_status_dropdown.state }}'
      friendly_name: 'Dad'
    sofia_status:
      value_template: '{{ states.input_select.sofia_status_dropdown.state }}'
      friendly_name: 'Sofia'
    thanasis_status:
      value_template: '{{ states.input_select.thanasis_status_dropdown.state }}'
      friendly_name: 'Thanasis'
    dad_status:
      value_template: '{{ states.input_select.dad_status_dropdown.state }}'
      friendly_name: 'Dad'


- platform: mqtt
  name: "Kerbeors Video Path"
  state_topic: "kios/mqtt"
  value_template: "{{ value_json.pathToVideo }}"
  expire_after: 3600

- platform: mqtt
  name: Start Timestamp
  unique_id: 120a114d-a8a1-4364-8d43-a35954b19239
  icon: mdi:timer-outline
  state_topic: homeassistant/start

# Sensor for Home Assistant shutdown timestamp.
- platform: mqtt
  name: Shutdown Timestamp
  unique_id: affce05d-153b-48f2-af61-1333e50c2163
  icon: mdi:timer-outline
  state_topic: homeassistant/shutdown

- platform: template
  sensors:
    last_alexa:
      # entity_id:
      #   - media_player.thanasis_echo
      #   - media_player.thanasis_flex
      #   - media_player.home_echo
      value_template: >
        {{ states.media_player | selectattr('attributes.last_called', 'eq', True) | map(attribute='entity_id') | first }}

# - platform: feedparser
#   name: ΣΚΑΪ NEWS
#   feed_url: 'http://feeds.feedburner.com/skai/Uulu'
#   date_format: '%a, %b %d %I:%M %p'
#   inclusions:
#     - title
#     - link
#     - image
# #    - published
#     - summary

- platform: seventeentrack
  username: !secret 17track_email
  password: !secret 17track_pass
  show_delivered: true

# - platform: mitemp_bt
#   mac: 'A4:C1:38:32:B0:BA'
#   name: Room Temp
#   force_update: true
#   median: 1
#   monitored_conditions:
#     - temperature
#     - humidity
#     - battery

#- platform: mqtt
#   name: "rfid_reading"
#   state_topic: "esprfid/send"
#   value_template: "{{value_json.uid}}"
#   expire_after: 3

# - platform: mqtt
#   name: "rfid_user"
#   state_topic: "esprfid/send"
#   value_template: "{{value_json.username}}"
#   expire_after: 3

# - platform: mqtt
#   name: "rfid_opendoor"
#   state_topic: "esprfid"
#   value_template: "{{value_json.cmd}}"
#   expire_after: 5 

# - platform: mqtt
#   state_topic: "sensors/rf/receiver"
#   name: "RF Receiver"
- platform: history_stats
  name: Zigbee Unavailable
  entity_id: sensor.temperature_inside
  state: 'unavailable'
  type: count
  end: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  duration:
    days: 7
#Maimou history sensors based on door and pir sensors to test principle
# Duration is a week from today to today minus 86400 minutes
- platform: history_stats
  name: Petrelaio Makis
  entity_id: binary_sensor.saloni_pir
  state: 'on'
  type: time
  end: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  duration:
    days: 7
- platform: history_stats
  name: Petrelaio Leonidas
  entity_id: binary_sensor.pir_kouzina
  state: 'on'
  type: time
  end: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  duration:
    days: 7
- platform: history_stats
  name: Petrelaio Sofita
  entity_id: binary_sensor.pir_sensor
  state: 'on'
  type: time
  end: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  duration:
    days: 7
- platform: history_stats
  name: Katanalosi Kaustira
  entity_id: binary_sensor.door_apothikaki
  state: 'on'
  type: time
  end: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  duration:
    days: 7

- platform: template
  sensors:
    sensor_count:
      friendly_name: 'Sensors Count'
      value_template: '{{ states.sensor | count }}'
    automation_count:
      friendly_name: 'Automations Count'
      value_template: '{{ states.automation | count }}'
    script_count:
      friendly_name: 'Scripts Count'
      value_template: '{{ states.script | count }}'
    switch_count:
      friendly_name: 'Switches Count'
      value_template: '{{ states.switch | count }}'
    binary_sensor_count:
      friendly_name: 'Binary Sensors Count'
      value_template: '{{ states.binary_sensor | count }}'
    lights_count:
      friendly_name: 'Lights Count'
      value_template: '{{ states.light | count }}'
    tracker_count:
      friendly_name: 'Devices Count'
      value_template: '{{ states.device_tracker | count }}'
    camera_count:
      friendly_name: 'Cameras Count'
      value_template: '{{ states.camera | count }}'
    group_count:
      friendly_name: 'Groups Count'
      value_template: '{{ states.group | count }}'
    inputs_count:
      friendly_name: 'Inputs Count'
      value_template: "{{ states | map(attribute='entity_id') | map('regex_search','^input') | select('true') | list | count}}"
    entities_count:
      friendly_name: 'Entities Count'
      value_template: "{{ states | map(attribute='entity_id') | list | count}}"
    media_player_count:
      friendly_name: 'Players Count'
      value_template: '{{ states.media_player | count }}'
    dehumi_tank:
      friendly_name: 'Δεξαμενή Αφυγραντήρα'
      value_template: >-
          {% if is_state('humidifier.midea_dehumidifier_18691697727728', 'tank_show'), 'False' %}
            Empty
          {% else %}
            Full
          {% endif %}
      icon_template: >-
          {% if is_state('humidifier.midea_dehumidifier_18691697727728', 'tank_show'), 'False' %}
            mdi:tray
          {% else %}
            mdi:tray-full
          {% endif %}
    rpi_uptime:
      friendly_name: RPi Uptime
      # entity_id: sensor.time
      value_template: >
        {% set up_time = as_timestamp(now()) - as_timestamp(states('sensor.last_boot')) %}

        {% set minutes = (up_time // 60) | int %}
        {% set hours = (minutes // 60) %}
        {% set days = (hours // 24) %}
        {% set weeks = (days // 7) %}

        {% set minutes = (minutes % 60) %}
        {% set hours =  (hours % 24) %}
        {% set days = (days % 7) %}

        {% macro phrase(value, name) %}
                  {%- set value = value %}
                  {%- set end = 's' if value > 1 else '' %}
                  {{- '{} {}{}'.format(value, name, end) if value | int > 0 else '' }}
        {%- endmacro %}
                  
        {% set text = [ phrase(weeks, 'week'), phrase(days, 'day'), phrase(hours, 'hr'), phrase(minutes, 'min') ] | select('!=','') | list | join(', ') %}
        {% set last_comma = text.rfind(',') %}
        {% if last_comma != -1 %}
          {% set text = text[:last_comma] + ' and' + text[last_comma + 1:] %}
        {% endif %}
        
        {{ text }}
    ha_uptime:
      friendly_name: HA Uptime
      value_template: >
        {%- set up_time = as_timestamp(now())-as_timestamp(states('sensor.hassio_uptime')) %}

        {%- macro phrase(name, divisor, mod=None) %}
          {%- set value = ((up_time // divisor) % (mod if mod else divisor)) | int %}
          {%- set end = 's' if value > 1 else '' %}
          {{- '{} {}{}'.format(value, name, end) if value | int > 0 else '' }}
        {%- endmacro %}
        
        {%- set values = [ 
                    phrase('week', 60*60*24*7), 
                    phrase('day', 60*60*24, 7), 
                    phrase('hour', 60*60, 24),
                    phrase('min', 60), 
                    phrase('sec', 1, 60) 
                ] | select('!=','') | list %}
                      
        {{ values[:-1] | join(', ') ~ ' and ' ~ values[-1] if values | length > 1 else values | first }}
    rpi_last_boot_timestamp:
      friendly_name: Last Boot
      value_template: >
        {% set date = as_timestamp(states('sensor.last_boot')) | timestamp_custom('%d') %}
        {% set date = '{:01}'.format(date | int) %}
        {% if date in ('1', '21', '31') %}
          {% set date = date ~ 'st' %}
        {% elif now().day in ('2', '22') %}
          {% set date = date ~ 'nd' %}
        {% elif now().day in ('3', '23') %}
          {% set date = date ~ 'rd' %}
        {% else %}
          {% set date = date ~ 'th' %}
        {% endif %}
  
        {{ as_timestamp(states('sensor.last_boot')) | timestamp_custom('%H:%M on %a') }} {{ date }} {{ as_timestamp(states('sensor.last_boot')) | timestamp_custom('%b %Y') }}
    # xreosi_petrelaiou_emeis:
    #   friendly_name: "Χρέωση Πετρελαίου Εμείς"
    #   value_template: >-
    #     {% set a = (states('sensor.petrelaio_makis') | float ) %}
    #     {% set b = (states('sensor.petrelaio_leonidas') | float ) %}
    #     {% set c = (states('sensor.petrelaio_sofita') | float ) %}
    #     {% set K = (states('sensor.katanalosi_kaustira') | float ) %}
    #     {% set i = (states('input_number.oriaia_katanalose_kaustera') | float ) %}
    #     {% set P = (states('input_number.time_petrelaiou') | float ) %}
    #     {{'%0.2f'|format(i*P*K*a/(a+b+c))}}
    # xreosi_petrelaiou_leonidas:
    #   friendly_name: "Χρέωση Πετρελαίου Λεωνίδας"
    #   value_template: >-
    #     {% set a = (states('sensor.petrelaio_makis') | float ) %}
    #     {% set b = (states('sensor.petrelaio_leonidas') | float ) %}
    #     {% set c = (states('sensor.petrelaio_sofita') | float ) %}
    #     {% set K = (states('sensor.katanalosi_kaustira') | float ) %}
    #     {% set i = (states('input_number.oriaia_katanalose_kaustera') | float ) %}
    #     {% set P = (states('input_number.time_petrelaiou') | float ) %}
    #     {{'%0.2f'|format(i*P*K*b/(a+b+c))}}
    # xreosi_petrelaiou_sophita:
    #   friendly_name: "Χρέωση Πετρελαίου Σοφίτα"
    #   value_template: >-
    #     {% set a = (states('sensor.petrelaio_makis') | float ) %}
    #     {% set b = (states('sensor.petrelaio_leonidas') | float ) %}
    #     {% set c = (states('sensor.petrelaio_sofita') | float ) %}
    #     {% set K = (states('sensor.katanalosi_kaustira') | float ) %}
    #     {% set i = (states('input_number.oriaia_katanalose_kaustera') | float ) %}
    #     {% set P = (states('input_number.time_petrelaiou') | float ) %}
    #     {{'%0.2f'|format(i*P*K*c/(a+b+c))}}
    # Sensor for Home Assistant difference between start and shutdown times.
    restart_time:
      friendly_name: Restart Time
      unique_id: c252bb03-374f-41a9-9e41-d1e1e02b9d90
      icon_template: mdi:timer-outline
      unit_of_measurement: s
      device_class: timestamp
      value_template: "{{ (states('sensor.start_timestamp')|float(0) - states('sensor.shutdown_timestamp')|float(0))|round(1) }}"
    dark_sky_temperature:
      friendly_name: Temperature Dark Sky
      unique_id: a1033504-b409-476b-84f3-516d91cf6d5c
      icon_template: mdi:thermometer
      value_template: "{{state_attr('weather.dark_sky', 'temperature')}}"

    # midea_current_humidity:
    #   friendly_name: "midea_current_humidity"
    #   value_template: "{{ state_attr('humidifier.midea_dehumidifier_12345678901234', 'current_humidity') }}"
    #   unit_of_measurement: "%"
    # midea_target_humidity:
    #   friendly_name: "midea_target_humidity"
    #   value_template: "{{ state_attr('humidifier.midea_dehumidifier_12345678901234', 'humidity') }}"
    #   unit_of_measurement: "%"
    # dehumi_target_humidity:
    #   friendly_name: "Επιθυμητό Επίπεδο Υγρασίας"
    #   value_template: "{{ states.climate.midea_dehumi_18691697727728.attributes.humidity }}"
    #   unit_of_measurement: "%"
    # dehumi_current_humidity:
    #   friendly_name: "Τωρινό Επίπεδο Υγρασίας"
    #   value_template: "{{ states.climate.midea_dehumi_18691697727728.attributes.current_humidity }}"
    #   unit_of_measurement: "%"
    # dehumi_state:
    #   friendly_name: "Λειτουργία Αφυγραντήρα"
    #   value_template: "{{ states.climate.midea_dehumi_18691697727728.state }}"
    # xreosi_petrelaiou_emeis:
    #   friendly_name: "Χρέωση Πετρελαίου Εμείς"
    #   value_template: '{{ states.input_number.petrelaio_emeis.state | float * states.input_number.oriaia_katanalose_kaustera.state | round(2) | float * states.input_number.time_petrelaiou.state | float | round(1) }}'
    # xreosi_petrelaiou_leonidas:
    #   friendly_name: "Χρέωση Πετρελαίου Λεωνίδας"
    #   value_template: '{{ states.input_number.petrelaio_leonidas.state | float * states.input_number.oriaia_katanalose_kaustera.state | round(2) | float * states.input_number.time_petrelaiou.state | float | round(1) }}'
    # xreosi_petrelaiou_sophita:
    #   friendly_name: "Χρέωση Πετρελαίου Σοφίτα"
    #   value_template: '{{ states.input_number.petrelaio_sophita.state | float * states.input_number.oriaia_katanalose_kaustera.state | round(2) | float * states.input_number.time_petrelaiou.state | float | round(1) }}'
    
# - platform: history_stats
#   name: Δουλειά Εβδομάδας
# - platform: history_stats
#   entity_id: device_tracker.zte_gps_logger
#   state: 'Δουλειά'
#   type: time
  
  # start: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) - now().weekday() * 86400 }}'
  # end: '{{ now() }}'
  # start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  # duration:
  #   days: 7
  # end: '{{ now() }}'

# - platform: history_stats
#   name: Δουλειά Σήμερα
#   entity_id:  device_tracker.zte_gps_logger
#   state: 'Δουλειά'
#   type: time
#   start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
#   duration:
#     days: 1
# - platform: history_stats
#   name: Δουλειά Μήνας
#   entity_id: device_tracker.bv4000pro_4
#   state: 'Work'
#   type: time
#   end: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
#   duration:
#     days: 30
#   payload_available: "{{value_json.type} | heartbeat }"

#- platform: history_stats
#  type: time
#  name: Πόση ώρα σπίτι
#  entity_id: device_tracker.android2424a6fa317e0fdc
#  state: 'home'
#  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
#  end: '{{ now() }}'

#- platform: history_stats
#  type: time
#  name: Πόση ώρα εκτός
#  entity_id: device_tracker.android2424a6fa317e0fdc
#  state: 'not_home'
#  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
#  end: '{{ now() }}'

#- platform: template
#  sensors:
#    time_at_home_today:
#      friendly_name: 'Ωρες στο σπίτι'
#      value_template: '{{states.sensor.time_home.attributes.value}}'    
#    time_away_today:
#      friendly_name: 'Ώρες εκτός σπιτιού'
#      value_template: '{{states.sensor.time_away.attributes.value}}' 
#      
#          