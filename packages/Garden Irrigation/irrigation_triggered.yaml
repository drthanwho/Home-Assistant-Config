
#================
#=== Automations
#================
automation:

  #========================================================================
  #=== Run a cycle if it is enabled and at the right time on the right day
  #=== Or a Manual run is requested
  #========================================================================
  - alias: Irrigation Triggered
    id: irrigation_triggered
        
    #==============
    #=== TRIGGERS
    #==============
    trigger:
      #=== Cycle 1 Start Time
      - platform: time
        at: input_datetime.irrigation_cycle1_start_time
        id: cycle1

      #=== Cycle 2 Start Time
      - platform: time
        at: input_datetime.irrigation_cycle2_start_time
        id: cycle2

      #=== Cycle 3 Manual Run
      - platform: state
        entity_id: input_boolean.irrigation_cycle3_running
        to: 'on'
        id: cycle3

    #===============
    #=== CONDITIONS
    #===============
    condition:
      #=== Only continue if Master Control Switch is on
      - condition: state
        entity_id: input_boolean.irrigation_master_control_switch
        state: 'on'

      #=== Only continue if nothing is running
      - condition: state
        entity_id: 
          - input_boolean.irrigation_cycle1_running
          - input_boolean.irrigation_cycle2_running
          - input_boolean.irrigation_cycle3_running
        state: 'off'

      #=== Check this cycle is enabled. NOTE: don't check this for cycle 3 
      - condition: template
        value_template: >
          {% if trigger.entity_id == 'input_boolean.irrigation_cycle3_running' %}
            {% set cycle_triggered = 'cycle3' %}
          {% elif trigger.now.strftime('%H:%M') == states('input_datetime.irrigation_cycle1_start_time')[0:5] %}
            {% set cycle_triggered = 'cycle1' %}
          {% elif trigger.now.strftime('%H:%M') == states('input_datetime.irrigation_cycle2_start_time')[0:5] %}
            {% set cycle_triggered = 'cycle2' %}
          {% endif %}

          {% if (cycle_triggered == 'cycle1' and is_state('input_boolean.irrigation_cycle1_schedule_enabled', 'on')) or
                (cycle_triggered == 'cycle2' and is_state('input_boolean.irrigation_cycle2_schedule_enabled', 'on')) or
                (cycle_triggered == 'cycle3') %}
            True
          {% else %}
            False
          {% endif %}
          
      #=== Check it is not raining if that option is enabled. NOTE: don't check this for cycle 3
      - condition: template
        value_template: >
          {% if is_state('input_boolean.irrigation_ignore_schedule_if_raining', 'off') or 
                trigger.entity_id == 'input_boolean.irrigation_cycle3_running' %}
            True
          {% elif states('input_boolean.irrigation_ignore_schedule_if_raining') == 'on' and
                  states(states('input_text.irrigation_external_sensor_raining_now')) in ['off', 'unknown'] %}
            True
          {% else %}
            False
          {% endif %}

    #============
    #=== ACTIONS
    #============
    action:
      #== Set the cycle to be running
      - choose:
          #=== Cycle 1
          - conditions:
              condition: trigger
              id: cycle1
            sequence:
              - service: homeassistant.turn_on
                data:
                  entity_id: input_boolean.irrigation_cycle1_running

          #=== Cycle 2
          - conditions:
              condition: trigger
              id: cycle2
            sequence:
              - service: homeassistant.turn_on
                data:
                  entity_id: input_boolean.irrigation_cycle2_running

          #=== Cycle 3
          - conditions:
              condition: trigger
              id: cycle3
            sequence:
              - service: homeassistant.turn_on
                data:
                  entity_id: input_boolean.irrigation_cycle3_running