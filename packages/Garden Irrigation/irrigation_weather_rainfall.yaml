
#================
#=== Automations
#================
automation:
  #======================================
  #=== Set Default Rainfall Today Sensor
  #======================================
  - alias: Irrigation Set Default Rainfall Today Sensor
    id: irrigation_set_default_rainfall_today_sensor
    trigger:
      - platform: homeassistant
        event: start

      - platform: state
        entity_id: input_text.irrigation_external_sensor_rainfall_today
        to: ''

    condition:
      condition: or
      conditions:
        - condition: state
          entity_id: input_text.irrigation_external_sensor_rainfall_today
          state: 'unknown'

        - condition: state
          entity_id: input_text.irrigation_external_sensor_rainfall_today
          state: ''

    action:
      - service: input_text.set_value
        data_template:
          entity_id: input_text.irrigation_external_sensor_rainfall_today
          value: sensor.smartweather_average_rain_today


  #==========================================
  #=== Set Default Rainfall Yesterday Sensor
  #==========================================
  - alias: Irrigation Set Default Rainfall Yesterday Sensor
    id: irrigation_set_default_rainfall_yesterday_sensor
    trigger:
      - platform: homeassistant
        event: start

      - platform: state
        entity_id: input_text.irrigation_external_sensor_rainfall_yesterday
        to: ''

    condition:
      condition: or
      conditions:
        - condition: state
          entity_id: input_text.irrigation_external_sensor_rainfall_yesterday
          state: 'unknown'

        - condition: state
          entity_id: input_text.irrigation_external_sensor_rainfall_yesterday
          state: ''

    action:
      - service: input_text.set_value
        data_template:
          entity_id: input_text.irrigation_external_sensor_rainfall_yesterday
          value: sensor.smartweather_average_rain_yesterday


  #===================================
  #=== Set Default Raining Now Sensor
  #===================================
  - alias: Irrigation Set Default Raining Now Sensor
    id: irrigation_set_default_raining_now_sensor
    trigger:
      - platform: homeassistant
        event: start

      - platform: state
        entity_id: input_text.irrigation_external_sensor_raining_now
        to: ''

    condition:
      condition: or
      conditions:
        - condition: state
          entity_id: input_text.irrigation_external_sensor_raining_now
          state: 'unknown'

        - condition: state
          entity_id: input_text.irrigation_external_sensor_raining_now
          state: ''

    action:
      - service: input_text.set_value
        data_template:
          entity_id: input_text.irrigation_external_sensor_raining_now
          value: binary_sensor.raining_now


  #=====================================
  #=== Set Default Forecast Rain Sensor
  #=====================================
  - alias: Irrigation Set Default Forecast Rain Sensor
    id: irrigation_set_default_forecast_rain_sensor
    trigger:
      - platform: homeassistant
        event: start

      - platform: state
        entity_id: input_text.irrigation_external_sensor_forecast_rain
        to: ''

    condition:
      condition: or
      conditions:
        - condition: state
          entity_id: input_text.irrigation_external_sensor_forecast_rain
          state: 'unknown'

        - condition: state
          entity_id: input_text.irrigation_external_sensor_forecast_rain
          state: ''

    action:
      - service: input_text.set_value
        data_template:
          entity_id: input_text.irrigation_external_sensor_forecast_rain
          value: sensor.openweathermap_forecast_precipitation


  #===================================================
  #=== Initialise the Rainfall Sensors when HA starts
  #===================================================
  - alias: Irrigation Initialise Rainfall Sensors
    id: irrigation_initialise_rainfall_sensors
    trigger:
      - platform: homeassistant
        event: start

    action:
      - service: homeassistant.update_entity
        data:
          entity_id: 
            - sensor.irrigation_sensor_rainfall_today
            - sensor.irrigation_sensor_rainfall_yesterday
            - sensor.irrigation_sensor_forecast_rain
            - binary_sensor.irrigation_sensor_raining_now


  #===============================================================
  #=== Cycle rainfall history figures for the four previous days.
  #===============================================================
  - alias: Irrigation Rainfall Nightly Update
    id: irrigation_rainfall_nightly_update
    trigger: 
      - platform: time
        at: "00:00:01"

    action:
      - service: input_number.set_value
        entity_id: input_number.irrigation_rainfall_4
        data_template:
          value: >
            {{ states('input_number.irrigation_rainfall_3') }}

      - service: input_number.set_value
        entity_id: input_number.irrigation_rainfall_3
        data_template:
          value: >
            {{ states('input_number.irrigation_rainfall_2') }}

      - service: input_number.set_value
        entity_id: input_number.irrigation_rainfall_2
        data_template:
          value: >
            {{ states(states('input_text.irrigation_external_sensor_rainfall_yesterday')) | float }}


  #==============================================================================
  #=== Calculate rain multiplier
  #===
  #=== This multiplier (maximum 1.00) will decrease watering time proportionally
  #=== based on the difference between the rainfall threshold and the amount of
  #=== rain over the last few days. If the threshold is reached then it will
  #=== stop watering completely.
  #===
  #=== Note that sensor.smartweather_average_rain_today is an average of several
  #=== different weather sensors reporting rainfall today for this area.
  #==============================================================================
  - alias: Irrigation Rainfall Calculate Multiplier
    id: irrigation_rainfall_calculate_multiplier
    mode: queued
    trigger:
      - platform: state
        entity_id:
          - input_number.irrigation_days_of_rainfall_history_used
          - input_number.irrigation_rainfall_threshold
          - input_number.irrigation_rainfall_percentage_1
          - input_number.irrigation_rainfall_percentage_2
          - input_number.irrigation_rainfall_percentage_3
          - input_number.irrigation_rainfall_percentage_4
          - sensor.irrigation_sensor_rainfall_today
          - sensor.irrigation_sensor_rainfall_yesterday
          - input_number.irrigation_rainfall_2
          - input_number.irrigation_rainfall_3
          - input_number.irrigation_rainfall_4

    action:
      - service: input_number.set_value
        data_template:
          entity_id: input_number.irrigation_rainfall_multiplier
          value: >
            {% set rain_0 = states('sensor.irrigation_sensor_rainfall_today') | float %}
            {% set rain_1 = states('sensor.irrigation_sensor_rainfall_yesterday') | float %}
            {% set rain_2 = states('input_number.irrigation_rainfall_2')  | float%}
            {% set rain_3 = states('input_number.irrigation_rainfall_3')  | float%}
            {% set rain_4 = states('input_number.irrigation_rainfall_4')  | float%}

            {% set percent_1 = states('input_number.irrigation_rainfall_percentage_1') | float / 100 %}
            {% set percent_2 = states('input_number.irrigation_rainfall_percentage_2') | float / 100 %}
            {% set percent_3 = states('input_number.irrigation_rainfall_percentage_3') | float / 100 %}
            {% set percent_4 = states('input_number.irrigation_rainfall_percentage_4') | float / 100 %}
            
            {% set rain_1 = rain_1 * percent_1 %}
            {% set rain_2 = rain_2 * percent_2 %}
            {% set rain_3 = rain_3 * percent_3 %}
            {% set rain_4 = rain_4 * percent_4 %}

            {% set days_used = states('input_number.irrigation_days_of_rainfall_history_used') | int %}
            {% set threshold = states('input_number.irrigation_rainfall_threshold') | int %}

            {% set rain_total = rain_0 %}
            {% if days_used >= 1 %}
              {% set rain_total = rain_total + rain_1 %}
            {% endif %}
            {% if days_used >= 2 %}
              {% set rain_total = rain_total + rain_2 %}
            {% endif %}
            {% if days_used >= 3 %}
              {% set rain_total = rain_total + rain_3 %}
            {% endif %}
            {% if days_used >= 4 %}
              {% set rain_total = rain_total + rain_4 %}
            {% endif %}

            {% set multiplier = (1 - (rain_total / threshold)) | round(2) %}
            {% if multiplier <= 0 %}
              {% set multiplier = 0 %}
            {% endif %}

            {% if rain_total >= threshold %}
              0
            {% else %}
              {{ multiplier }}
            {% endif %}

