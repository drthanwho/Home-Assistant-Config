substitutions:
  devicename: porta_cam
  upper_devicename: Porta TTGOCAM
  friendly_name: porta_ttgocam
  
esphome:
  name: $devicename
  platform: ESP32
  board: esp-wrover-kit

packages:
  wifi: !include common_substitutions/wifi.yaml
  device_base: !include common_substitutions/device_base.yaml


binary_sensor:
  - platform: gpio
    pin: GPIO33
    name: $friendly_name PIR
    device_class: motion

  - platform: gpio
    pin:
      number: GPIO34
      mode: INPUT_PULLUP
      inverted: True
    name: $friendly_name Button

sensor:
  - platform: homeassistant
    id: inside_temperature
    entity_id: sensor.temperature_inside
    internal: true
  - platform: homeassistant
    id: outside_temperature
    entity_id: sensor.temperature_outside
    internal: true
  - platform: homeassistant
    id: inside_humidity
    entity_id: sensor.humidity_inside
    internal: true
  - platform: homeassistant
    id: outside_humidity
    entity_id: sensor.humidity_outside
    internal: true

esp32_camera:
  name: $friendly_name Camera
  external_clock:
    pin: GPIO32
    frequency: 20MHz
  i2c_pins:
    sda: GPIO13
    scl: GPIO12
  data_pins: [GPIO5, GPIO14, GPIO4, GPIO15, GPIO18, GPIO23, GPIO36, GPIO39]
  vsync_pin: GPIO27
  href_pin: GPIO25
  pixel_clock_pin: GPIO19
  power_down_pin: GPIO26
  resolution: SXGA
  jpeg_quality: 10
  vertical_flip: true
  horizontal_mirror: true
  # saturation: -1
  # brightness: -2
  # contrast: 1

i2c:
  sda: GPIO21
  scl: GPIO22

font:
  # - file: "fonts/Times New Roman.ttf"
  #   id: tnr1
  #   size: 20
  # - file: "fonts/Times New Roman.ttf"
  #   id: tnr2
  #   size: 35
  - file: 'fonts/slkscr.ttf'
    id: font1
    size: 8
  - file: 'fonts/BebasNeue-Regular.ttf'
    id: font2
    size: 30
  - file: 'fonts/arial.ttf'
    id: font3
    size: 14

time:
  - platform: homeassistant
    id: homeassistant_time
    # on_time:
    #   # Every 30 minutes
    #   - minutes: 30
    #     then:
    #       - switch.toggle: restart_switch

display:
  - platform: ssd1306_i2c
    model: "SSD1306 128x64"
    rotation: 180
    address: 0x3C
    lambda: |-
      it.strftime(20, 0, id(font2), "%H:%M:%S", id(homeassistant_time).now());
      if (id(inside_temperature).has_state()) {
        it.printf(0, 60, id(font2), TextAlign::BOTTOM_LEFT, "%.1f°C %.1f%%", id(outside_temperature).state, id(outside_humidity).state);
      }


    # lambda: |-
    #   it.strftime(64, 0, id(tnr1), TextAlign::TOP_CENTER,"%d-%m-%Y", id(homeassistant_time).now());
    #   it.strftime(64, 64, id(tnr2), TextAlign::BASELINE_CENTER, "%H:%M", id(homeassistant_time).now());
      
#    lambda: |-
#      it.strftime(0, 0, id(my_font), "%H:%M", id(time).now());
 #     it.printf(0, 20, id(my_font), "sensor: %.1f", id(volt).state);
 
    # lambda: |-
    #   // Print "Spiti" in top center.
    #   it.printf(64, 0, id(font1), TextAlign::TOP_CENTER, "Eksipno Spiti");

    #   // Print time in HH:MM format
    #   it.strftime(0, 60, id(font2), TextAlign::BASELINE_LEFT, "%H:%M", id(homeassistant_time).now());

    #   // Print inside temperature (from homeassistant sensor)
    #   if (id(inside_temperature).has_state()) {
    #     it.printf(127, 23, id(font3), TextAlign::TOP_RIGHT , "%.1f°", id(inside_temperature).state);
    #   }

    #   // Print outside temperature (from homeassistant sensor)
    #   if (id(outside_temperature).has_state()) {
    #     it.printf(127, 60, id(font3), TextAlign::BASELINE_RIGHT , "%.1f°", id(outside_temperature).state);
    #   }